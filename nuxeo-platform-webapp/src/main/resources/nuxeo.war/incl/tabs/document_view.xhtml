<div xmlns="http://www.w3.org/1999/xhtml"
  xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:c="http://java.sun.com/jstl/core"
  xmlns:t="http://myfaces.apache.org/tomahawk"
  xmlns:nxdir="http://nuxeo.org/nxdirectory"
  xmlns:a4j="https://ajax4jsf.dev.java.net/ajax"
  xmlns:nxh="http://nuxeo.org/nxweb/html"
  xmlns:nxl="http://nuxeo.org/nxforms/layout"
  xmlns:nxu="http://nuxeo.org/nxweb/util">

<h3><h:outputText
  value="#{messages['label.content.header.documentProperties']}" /></h3>

<h:form id="document_view">

  <h:panelGrid rendered="#{deleteActions.trashManagementEnabled}">
    <ui:include src="/incl/trash_details.xhtml" />
  </h:panelGrid>

  <c:if test="#{empty documentActions.currentType.layout}">
    <nxl:documentLayout mode="view" value="#{currentDocument}" />
  </c:if>

  <h:dataTable var="field" value="#{documentActions.currentType.layout}"
    rendered="#{!empty documentActions.currentType.layout}"
    class="dataInput" columnClasses="labelColumn, fieldColumn">
    <h:column>
      <h:outputText value="#{messages[field.displayLabel]}" />
    </h:column>

    <h:column>

      <h:outputText
        value="#{currentDocument[field.schemaName][field.fieldName]}"
        rendered="${field.jsfComponent=='h:inputText'}" />

      <h:outputText
        value="#{currentDocument[field.schemaName][field.fieldName]}"
        rendered="${field.jsfComponent=='h:inputTextarea'}" />

      <h:outputText
        rendered="#{field.jsfComponent=='t:inputFileUpload' and currentDocument[field.schemaName][field.fieldName] != null}">
        <h:outputText rendered="false">
          XXX AT: get rid of hardcoded file name references using a custom multi-component
        </h:outputText>
        <nxh:outputLink
          value="#{nxd:fileUrl('downloadFile', currentDocument, field.fullName, currentDocument.file.filename)}">
          <nxh:graphicImage
            value="#{nxd:fileIconPath(currentDocument[field.schemaName][field.fieldName])}"
            rendered="#{! empty nxd:fileIconPath(currentDocument[field.schemaName][field.fieldName])}" />
          <nxh:outputText value="#{currentDocument.file.filename}" />
        </nxh:outputLink>

        <nxu:methodResult name="hasPDFCapabilities"
          value="#{conversionActions.isFileExportableToPDF(field.fullName)}">
          <h:panelGroup rendered="#{hasPDFCapabilities}">
            <h:outputText value=" | " />
            <h:commandLink action="#{conversionActions.generatePdfFile}">
              <f:param name="fileFieldFullName"
                value="#{field.fullName}" />
              <f:param name="filename"
                value="#{currentDocument.file.filename}" />
              <h:outputText
                value="#{messages['label.document.generatePdf']}" />
            </h:commandLink>
          </h:panelGroup>
        </nxu:methodResult>

        <nxu:methodResult name="isLiveEditable"
          value="#{liveEditHelper.isCurrentDocumentLiveEditable(field.schemaName, field.fieldName)}">
          <h:panelGroup rendered="#{isLiveEditable}">
            <h:outputText value=" | " />
            <h:outputLink
              value="#{nxd:liveEditUrl(changeableDocument, field.schemaName, field.fieldName, 'filename')}">
              <h:outputText
                value="#{messages['label.document.directEdit']}" />
            </h:outputLink>
          </h:panelGroup>
        </nxu:methodResult>

      </h:outputText>

      <h:outputText
        value="#{currentDocument[field.schemaName][field.fieldName]}"
        rendered="${field.jsfComponent=='nxu:editor'}" escape="false" />

      <h:outputText
        value="#{currentDocument[field.schemaName][field.fieldName]}"
        rendered="${field.jsfComponent=='t:inputCalendar'}">
        <f:convertDateTime pattern="#{nxu:basicDateFormater()}" />
      </h:outputText>

      <nxdir:directoryEntryOutput
        value="#{currentDocument[field.schemaName][field.fieldName]}"
        directoryName="#{field.directory}"
        rendered="${field.jsfComponent=='nxdir:selectOneListbox'}" />

      <t:dataList var="item"
        value="#{currentDocument[field.schemaName][field.fieldName]}"
        layout="simple"
        rendered="${field.jsfComponent=='nxdir:selectManyListbox'}">
        <div><nxdir:directoryEntryOutput value="#{item}"
          directoryName="#{field.directory}" /></div>
      </t:dataList>

    </h:column>
  </h:dataTable>

  <a4j:outputPanel>
    <ui:include src="/incl/lock_details.xhtml" />
  </a4j:outputPanel>

  <h3><h:outputText
    value="#{messages['label.content.header.metadata']}" /></h3>

  <nxl:layout name="dublincore" mode="view" value="#{currentDocument}" />

  <ui:include src="/incl/document_publishing_actions.xhtml" />

</h:form>

<nxu:methodResult name="hasFiles"
  value="#{currentDocument.hasSchema('files')}">
  <div><t:div rendered="#{hasFiles}">
    <h3><h:outputText
      value="#{messages['label.content.header.attachedFiles']}" /></h3>

    <h:panelGrid>

      <a4j:region renderRegionOnly="false">
        <a4j:outputPanel ajaxRendered="true">
          <nxu:inputList value="#{currentDocument.files.files}"
            id="files" model="model" diff="true"
            template="#{nxd:defaultValue('files', 'files')}"
            required="true">

            <h:panelGrid columns="2">
              <h:panelGroup>
                <nxu:outputFile value="#{model.rowData.file}"
                  filename="#{model.rowData.filename}" />
              </h:panelGroup>
            </h:panelGrid>

          </nxu:inputList>
          <h:message styleClass="errorMessage" for="files" />
        </a4j:outputPanel>
      </a4j:region>

    </h:panelGrid>

    <h:outputText
      rendered="#{nxu:test(currentDocument.files.files.size == 0, true, false)}"
      value="#{messages['label.files.noAttachedFiles']}" />

  </t:div></div>
</nxu:methodResult>

<nxu:methodResult name="versionable"
  value="#{currentDocument.hasFacet('Versionable')}">
  <t:div rendered="#{versionable}">
    <h:panelGrid columns="2" styleClass="dataInput"
      columnClasses="labelColumn, fieldColumn" rendered="#{versionable}">
      <h:outputText
        value="#{messages['label.document.state']}" />
      <h:panelGroup>
        <h:outputText value="#{currentDocument.currentLifeCycleState}" />
      </h:panelGroup>
    </h:panelGrid>

    <h:panelGrid columns="2" styleClass="dataInput"
      columnClasses="labelColumn, fieldColumn" rendered="#{documentVersioning.uidInfoAvailable}">
      <h:outputText
        value="#{messages['label.document.version']}" />
      <h:panelGroup>
        <nxh:outputText
          value="#{documentVersioning.getVersionLabel(currentDocument)}" />
      </h:panelGroup>
    </h:panelGrid>
  </t:div>
</nxu:methodResult>

<nxu:methodResult name="commentable"
  value="#{currentDocument.hasFacet('Commentable')}">
  <t:div rendered="#{commentable}">

  <h3>
    <h:form>
      <h:commandLink actionListener="#{commentManagerActions.toggleCreateForm}">
        <h:graphicImage url="/img/toggle_plus.png" rendered="#{!commentManagerActions.showCreateForm}" />
        <h:graphicImage url="/img/toggle_minus.png" rendered="#{commentManagerActions.showCreateForm}" />
        <h:outputText value="#{messages['label.comments.add']}" />
      </h:commandLink>
    </h:form>
  </h3>

  <h:form id="createForm" rendered="#{commentManagerActions.showCreateForm and commentManagerActions.savedReplyCommentId == null}">
    <ui:include src="/incl/create_comment_form.xhtml" />
  </h:form>

  <h:form>
    <t:dataList var="threadEntry" value="#{documentThreadedComments}"
      styleClass="commentsOutput" rowIndexVar="rowIndex">
      <h:panelGroup rendered="#{documentThreadedComments.size > 0}" layout="block"
        style="margin-left:#{threadEntry.depth*25}px;"
        styleClass="#{nxu:test(rowIndex % 2 == 1, 'dataRowOdd commentBlock', 'dataRowEven commentBlock')}">
        <div class="commentActions">
          <h:commandLink value="#{messages['command.comments.reply']}"
            action="#{commentManagerActions.beginComment}">
            <f:param name="replyCommentId" value="#{threadEntry.comment.id}"/>
          </h:commandLink>
          <h:outputText value=" | "/>
          <h:commandLink action="#{commentManagerActions.deleteComment}"
            value="#{messages['command.delete']}"
            rendered="#{threadEntry.comment.comment.author == commentManagerActions.principalName or commentManagerActions.principalIsAdmin}">
            <f:param name="deleteCommentId" value="#{threadEntry.comment.id}"/>
          </h:commandLink>
        </div>

        <div class="commentAuthor">
          <h:outputText value="#{nxu:userFullName(threadEntry.comment.comment.author)}"/>

          <h:outputText value=" "/>
          <span class="commentCreationDate">
            <h:outputText value="#{logEntry.eventDate}" >
             <f:convertDateTime pattern="#{nxu:basicDateFormater()}" />
            </h:outputText>
            <h:outputText value=" "/>
            <h:outputText value="#{threadEntry.comment.comment.creationDate}"
              converter="TimeConverter"/>
          </span>
        </div>
        <div class="commentQuote">
          <h:outputText value="#{threadEntry.comment.comment.text}"/>
        </div>

        <f:subview id="createForm" rendered="#{commentManagerActions.commentStarted
          and threadEntry.comment.id==commentManagerActions.savedReplyCommentId }">
          <ui:include src="/incl/create_comment_form.xhtml" />
        </f:subview>


      </h:panelGroup>
    </t:dataList>
    </h:form>

  </t:div>
</nxu:methodResult>

</div>