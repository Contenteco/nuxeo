<project name="nuxeo-assembly"
         default="build"
         xmlns:nx="urn:nuxeo-build"
         xmlns:artifact="urn:nuxeo-artifact">
  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml"
           uri="urn:nuxeo-artifact" />

  <target name="init" unless="init.done">
    <property name="outdir" value="${maven.project.build.directory}" />
    <property name="stagedir" value="${outdir}/stage" />
    <antcall target="expand" />
    <property name="init.done" value="true" />
  </target>

  <target name="expand" unless="no.build">
    <artifact:expand depth="3" />
  </target>

  <target name="build" depends="init" unless="no.build">
    <echo>Building JBoss distributions...</echo>
    <property name="jboss" value="${stagedir}/jboss" />

    <antcall target="prepare-jboss" />
    <artifact:attach file="pom.xml"
                     target="${maven.project.groupId}:${maven.project.artifactId}"
                     type="pom" />
    <antcall target="build-nuxeo-ep-jboss" />
    <antcall target="build-nuxeo-dm-jboss" />
  </target>

  <target name="prepare-jboss">
    <unzip dest="${jboss}">
      <artifact:resolveFile key="org.jboss:jboss-as:4.2.3.GA:zip"
                            classifier="light" />
    </unzip>
    <ant antfile="build.xml" target="patch">
      <property name="jboss.dir" value="${jboss}" />
    </ant>
    <ant antfile="build.xml" target="copy-lib">
      <property name="jboss.dir" value="${jboss}" />
    </ant>
    <copy todir="${jboss}">
      <fileset dir="src/main/resources/jboss" />
    </copy>
    <chmod dir="${jboss}/bin" perm="750" includes="*.sh" />

    <copy todir="${jboss}/server/default/lib">
      <!-- copy jdbc drivers -->
      <artifact:resolveFile key="postgresql:postgresql:8.3-604.jdbc3" />
      <artifact:resolveFile key="mysql:mysql-connector-java:5.1.6" />
      <!-- copy logging monitor -->
      <artifact:resolveFile key="org.jboss.services:logging-monitor" />
    </copy>
  </target>

  <target name="build-nuxeo-ep-jboss"
          unless="maven.profile.nuxeo-dm"
          description="Build JBoss distribution with Nuxeo EP">

    <delete failonerror="false" dir="${outdir}/nuxeo-ep-jboss" />
    <copy todir="${outdir}/nuxeo-ep-jboss">
      <fileset dir="${jboss}" />
    </copy>
    <unzip dest="${outdir}/nuxeo-ep-jboss/server/default/deploy/nuxeo.ear">
      <artifact:resolveFile key="org.nuxeo.ecm.platform:nuxeo-platform-ear:${nuxeo.features.version}:zip" />
    </unzip>
    <antcall target="jboss-third-party-libraries">
      <param name="lib.dir"
             value="${outdir}/nuxeo-ep-jboss/server/default/deploy/nuxeo.ear/lib" />
    </antcall>
    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}-nuxeo-ep.zip"
         basedir="${outdir}"
         includes="nuxeo-ep-jboss/**" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}-nuxeo-ep.zip"
                     target="${maven.project.groupId}:${maven.project.artifactId}"
                     classifier="nuxeo-ep"
                     type="zip" />
  </target>

  <target name="build-nuxeo-dm-jboss"
          unless="maven.profile.nuxeo-ep"
          description="Build JBoss distribution with Nuxeo DM">

    <delete failonerror="false" dir="${outdir}/nuxeo-dm-jboss" />
    <copy todir="${outdir}/nuxeo-dm-jboss">
      <fileset dir="${jboss}" />
    </copy>
    <unzip dest="${outdir}/nuxeo-dm-jboss/server/default/deploy/nuxeo.ear">
      <artifact:resolveFile key="org.nuxeo.ecm.distribution:nuxeo-distribution-dm:${nuxeo.distribution.version}:zip" />
    </unzip>
    <antcall target="jboss-third-party-libraries">
      <param name="lib.dir"
             value="${outdir}/nuxeo-dm-jboss/server/default/deploy/nuxeo.ear/lib" />
    </antcall>
    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}-nuxeo-dm.zip"
         basedir="${outdir}"
         includes="nuxeo-dm-jboss/**" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}-nuxeo-dm.zip"
                     target="${maven.project.groupId}:${maven.project.artifactId}"
                     classifier="nuxeo-dm"
                     type="zip" />
  </target>

  <target name="jboss-third-party-libraries">
    <!-- Remove third-parties provided by JBoss 
    <delete>
      <fileset dir="${lib.dir}">
      </fileset>
    </delete>
    -->
    <!-- Add libraries required under JBoss (not present in the dependency tree) -->
    <copy todir="${lib.dir}" overwrite="true">
      <artifact:resolveFile key="org.jboss.el:jboss-el" />
      <artifact:resolveFile key="jboss:jboss-cache-jdk50" />
      <artifact:resolveFile key="org.jboss.seam:jboss-seam-remoting" />
      <artifact:resolveFile key="org.jboss.seam:jboss-seam-mail" />
      <artifact:resolveFile key="org.jboss.seam:jboss-seam-debug" />
      <artifact:resolveFile key="jboss:jgroups" />
      <artifact:resolveFile key="bouncycastle:bcmail-jdk14" />
      <artifact:resolveFile key="bouncycastle:bcprov-jdk14" />
      <artifact:resolveFile key="org.slf4j:slf4j-api" />
      <artifact:resolveFile key="org.slf4j:slf4j-log4j12" />
      <artifact:resolveFile key="org.apache.directory.server:apacheds-protocol-shared" />
      <artifact:resolveFile key="org.openoffice:jurt" />
      <artifact:resolveFile key="org.fontbox:fontbox" />
      <artifact:resolveFile key="org.jempbox:jempbox" />
      <artifact:resolveFile key="org.apache.poi:ooxml-schemas" />
      <artifact:resolveFile key="org.apache.httpcomponents:httpcore" />
      <artifact:resolveFile key="com.google.collections:google-collections" />
    </copy>
  </target>

  <target name="clean">
    <delete dir="${stagedir}" />
  </target>

</project>
